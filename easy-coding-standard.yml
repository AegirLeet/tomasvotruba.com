imports:
    - { resource: 'vendor/symplify/easy-coding-standard/config/psr2.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/php71.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/common.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/symplify.yml' }

services:
    SlevomatCodingStandard\Sniffs\Classes\UnusedPrivateElementsSniff:

    SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff:
        enableEachParameterAndReturnInspection: true

    # Complexity limits
    PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff:
        absoluteComplexity: 4
    PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\NestingLevelSniff:
        absoluteNestingLevel: 3

parameters:
    skip:
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.UselessDocComment: ~

        # breaks single line /** @var Type $name */ doc blocks, which makes Array[] types without IDE effect
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.MissingShort: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.ContentAfterOpen: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.ContentBeforeClose: ~

        Symplify\CodingStandard\Sniffs\DependencyInjection\NoClassInstantiationSniff:
            - '*/src/Posts/Year2017/Ast/*'

    exclude_checkers:
        # resolve later
        - 'Symplify\CodingStandard\Sniffs\CleanCode\ForbiddenStaticFunctionSniff'
